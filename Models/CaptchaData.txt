أكيد! هذا هو التوثيق الكامل للكلاس `CaptchaData` باللغة العربية، يمكنك حفظه في ملف باسم `CaptchaData.txt`:

---

# 📄 CaptchaData – شرح كامل باللغة العربية

## ✅ الغرض من الكلاس
`CaptchaData` هو كائن (Model) يمثل **البيانات السلوكية للمستخدم** التي يتم إرسالها من الواجهة الأمامية (Frontend) إلى الخلفية (Backend) لتحليل سلوكه عند التفاعل مع اختبار CAPTCHA.

تحتوي هذه البيانات على **معلومات حركية وتحليلية** لحركة الماوس، سرعة التفاعل، مدى ثبات الحركة، وغيرها من المؤشرات التي تساعد في التمييز بين المستخدم البشري والروبوت.

---

## ✅ مكان الملف
```
CaptchaApi > Models > CaptchaData.cs
```

---

## ✅ شرح الخصائص واحدة تلو الأخرى:

---

### 🔹 `float MaxSpeed`
🔸 أقصى سرعة تم تسجيلها لحركة الماوس أثناء وجوده في منطقة الاختبار.

---

### 🔹 `float LastSpeed`
🔸 آخر سرعة مسجلة قبل النقر على المربع الحقيقي `real-checkbox`.

---

### 🔹 `float DecelerationRate`
🔸 معدل التباطؤ في حركة الماوس (هل بدأ بطيئًا؟ هل تباطأ؟).  
🔸 يتم حسابه من خلال الفرق بين متوسط السرعة وأقل سرعة.

---

### 🔹 `int DecelerationRatio`
🔸 النسبة المئوية بين السرعة القصوى والسرعة الأخيرة.  
🔸 كلما زادت النسبة → دليل على وجود تباطؤ حقيقي.

---

### 🔹 `float SpeedStability`
🔸 مقياس لمدى استقرار سرعة الماوس.  
🔸 يتم حسابه باستخدام الانحراف المعياري.  
🔸 القيم المنخفضة تعني أن الحركة كانت ثابتة جدًا (⚠️ سلوك روبوتي).

---

### 🔹 `int MovementTime`
🔸 الزمن الكلي (بالملي ثانية) الذي استغرقه المستخدم من لحظة الدخول إلى منطقة CAPTCHA حتى النقر.

---

### 🔹 `int SuddenStopCount`
🔸 عدد التوقفات المفاجئة في حركة الماوس (مثال: سرعة عالية فجأة إلى 0).  
🔸 إذا زاد عن 3، قد يكون سلوك غير طبيعي.

---

## ✅ خصائص إضافية تحليلية

### 🔹 `string? SpeedTrend`
🔸 الاتجاه العام للحركة (هل كانت الحركة تدريجية أم حادة؟).  
🔹 القيم المحتملة: `"sharp"` أو `"gradual"`  
🔹 علامة استفهام `?` تعني أنها **nullable** (قد تكون null).

---

### 🔹 `string? MovementPattern`
🔸 نمط الحركة الكامل.  
🔹 القيم المحتملة: `"normal"` أو `"too stable"` أو `"chaotic"`

---

### 🔹 `string? BehaviorType`
🔸 التصنيف النهائي للسلوك من الأمامي.  
🔹 القيم المحتملة: `"human"` أو `"uncertain"` أو `"robot"`

---

## ✅ كيف يتم استخدام `CaptchaData`؟
يتم تمرير هذا الكائن تلقائيًا من الأمامي إلى الخلفي عبر `POST` باستخدام `fetch()` أو أي مكتبة HTTP.  
ويتم تحليله داخل `BehaviorAnalyzer` لتحديد الإجراء المناسب.

---

## ✅ لماذا البيانات مهمة؟
- لأن الأنظمة الذكية الحديثة تعتمد على **تحليل السلوك** وليس فقط على النقر.
- تساعد هذه البيانات في اتخاذ قرارات أمنية ذكية دون الاعتماد فقط على الوقت أو التحقق التقليدي.

---

هل ترغب بتحويل هذا التوثيق إلى PDF أو Word؟ فقط قل لي "حول إلى PDF" أو "حول إلى Word" وسأقوم بذلك فورًا.