أكيد! هذا هو التوثيق الكامل للكلاس `UserBehaviorRecord` باللغة العربية، يمكنك حفظه في ملف باسم `UserBehaviorRecord.txt`:

---

# 📄 UserBehaviorRecord – شرح كامل باللغة العربية

## ✅ الغرض من الكلاس  
`UserBehaviorRecord` هو كائن (Model) يُستخدم في الخلفية (Backend) لتخزين **سجل السلوك الكامل لمستخدم معين بناءً على عنوان الـ IP**.

هذا السجل يساعدنا في:
- تتبع عدد المحاولات التي قام بها كل مستخدم.
- معرفة ما إذا كان هذا المستخدم يتصرف بشكل طبيعي أم مشبوه.
- تطبيق منطق الحظر المؤقت أو الدائم عند الحاجة.

---

## ✅ مكان الملف
```
CaptchaApi > Models > UserBehaviorRecord.cs
```

---

## ✅ الخصائص – شرح مفصل لكل خاصية:

---

### 🔹 `DateTime FirstSeen`
🟢 أول مرة ظهر فيها هذا الـ IP وتفاعل مع النظام.  
📌 تُستخدم لتحديد المدة الزمنية للنشاط.

---

### 🔹 `DateTime LastSeen`
🟢 آخر وقت قام فيه هذا الـ IP بمحاولة اختبار CAPTCHA.  
📌 يتم تحديثها في كل محاولة جديدة.

---

### 🔹 `int TotalAttempts`
🟢 عدد المحاولات الكلية التي قام بها هذا الـ IP (بما فيها الصحيحة والمشبوهة).

---

### 🔹 `int BadAttempts`
🟠 عدد المحاولات التي تم تصنيفها كسلوك مشبوه أو غير بشري.  
📌 يتم زيادتها فقط إذا كان `BehaviorType = "uncertain"` أو `"robot"`.

---

### 🔹 `string? LastBehaviorType`
🧠 نوع السلوك الأخير الذي تم تسجيله لهذا المستخدم.  
📌 القيم المحتملة: `"human"`, `"uncertain"`, `"robot"`  
🔸 Nullable: يمكن أن تكون null في أول محاولة.

---

### 🔹 `string? LastMovementPattern`
🌀 نمط الحركة الأخير الذي تم ملاحظته.  
📌 القيم المحتملة: `"normal"`, `"too stable"`, `"chaotic"`

---

### 🔹 `int WarningLevel`
🔺 مقياس لخطور سلوك هذا المستخدم، يتم حسابه تلقائيًا بناءً على عدة عوامل مثل:
- عدد المحاولات المشبوهة.
- نمط الحركة.
- عدد التوقفات المفاجئة.
- معدل التباطؤ.

📌 إذا تجاوز `WarningLevel` رقم معين:
- يتم الحظر المؤقت عند ≥ 3.
- يتم الحظر الدائم عند ≥ 8.

---

### 🔹 `bool IsBanned`
🚫 هل هذا المستخدم محظور **دائمًا**؟  
📌 إذا أصبح `true`، فلن يُسمح له بالمحاولة مرة أخرى أبدًا (إلا إذا أزلنا الحظر يدويًا).

---

### 🔹 `DateTime? BannedUntil`
⏳ وقت انتهاء الحظر **المؤقت** (إذا كان مفروضًا).  
📌 إذا كانت القيمة `null` → يعني أنه غير محظور مؤقتًا.  
📌 إذا كانت تحتوي وقتًا مستقبليًا → لا يُسمح له بالمحاولة حتى ينتهي هذا الوقت.

---

## ✅ كيف يتم استخدام `UserBehaviorRecord`؟
- يتم إنشاء كائن منه لكل IP عند أول محاولة.
- يتم تحديث بياناته في كل محاولة جديدة.
- يُستخدم داخليًا في `BehaviorAnalyzer` لاتخاذ قرار `"ok"` أو `"banned"` بناءً على السلوك السابق والحالي.

---

## ✅ لماذا هذا الكلاس مهم؟
- لأنه يُمثل **الذاكرة الأمنية المؤقتة** للنظام.
- يسمح لنا بتتبع سلوك المستخدمين على المدى القصير.
- يمكن تطويره لاحقًا ليُخزن في قاعدة بيانات دائمة.

---

هل ترغب أن أحوّله إلى PDF أو Word؟ فقط قل لي "حول إلى PDF" أو "حول إلى Word" وسأقوم بذلك فورًا.